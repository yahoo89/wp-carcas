// main settings
p {
  padding-bottom: 20px;
  line-height: 1.5;
}

a {
  color: $bg;
  text-decoration: none;
  @include transition();
  @include hover {
    text-decoration: none;
  }
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: $f;
  font-weight: 700;
  padding-bottom: 20px;
  text-wrap: balance;
  a {
    color: inherit;
    @include hover {
      color: $bg
    }
  }
}

h1, .h1 {
  font-size: 35px;
  line-height: 1.25;
  padding-bottom: 25px;
  @include rwd-min(1081) {
    font-size: 55px;
  }
}
h2, .h2 {
  font-size: 28px;
  &.has_line {
    padding-bottom: 0;
    &:after {
      content: '';
      background-color: $bg;
      height: 2px;
      width: 22px;
      display: block;
      margin: 12px 0 30px;
    }

    &.to_right {
      margin-bottom: 30px;
      &:after {
        display: inline-block;
        vertical-align: middle;
        margin: 0 0 8px 14px;
      }
    }
  }
  @include rwd-min(1081) {
    font-size: 40px;
  }
}
h3, .h3 {
  font-size: 20px;
  @include rwd-min(1081) {
    font-size: 28px;
  }
}
h4, .h4 {
  font-size: 18px;
}
h5, .h5 {
  font-size: 14px;
}

.post_content {
  ul {
    margin: 0 0 20px 15px;
    li {
      padding: 5px 0 5px 15px;
      position: relative;
      &:before {
        content: "";
        background: $bg;
        width: 4px;
        height: 4px;
        border-radius: 50%;
        position: absolute;
        top: rem(15);
        left: 0;
      }
    }
  }
}

input[type="text"], input[type="email"], input[type="tel"], input[type="search"], input[type="password"], textarea {
  height: $inputH;
  width: 100%;
  border: 1px solid #ccc;
  background: #fff;
  padding: 0 rem(20);
  font-family: $f;
  font-size: rem(14);
  &:focus {
    border-color: $bg;
  }
  &:-webkit-autofill {
    -webkit-text-fill-color: $c !important;
    -webkit-box-shadow: 0 0 0 30px $c2 inset !important;
  }
}

textarea {
  resize: none;
  height: 100px;
  padding: 12px rem(20);
}

.button, .submit {
  display: inline-block;
  line-height: rem(40);
  padding: 0 rem(20);
  font-size: rem(14);
  background: $bg;
  color: #fff;
  font-family: $f;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  &:hover {
    background: $bg2;
    text-decoration: none;
  }
}

// flex classes
.flex {
  @include flexbox;
  @include justify-content(space-between);
}
.flex__rwd {
  @include rwd-min(1081) {
    @include flexbox;
    @include justify-content(space-between);
  }
}
.flex__mob {
  @include rwd-min(768) {
    @include flexbox;
    @include justify-content(space-between);
  }
}

.alc {
  @include flexbox;
  @include justify-content(space-between);
  @include align-items(center);
}

.alc__rwd {
  @include rwd-min(1081) {
    @include flexbox;
    @include justify-content(space-between);
    @include align-items(center);
  }
}

.alc__mob {
  @include rwd-min(768) {
    @include flexbox;
    @include justify-content(space-between);
    @include align-items(center);
  }
}

.start {
  @include flexbox;
  @include justify-content(flex-start);
}

.end {
  @include flexbox;
  @include justify-content(flex-end);
}

.center {
  @include flexbox;
  @include justify-content(center);
}

.around {
  @include flexbox;
  @include justify-content(space-around);
}

.alstart {
  @include flexbox;
  @include justify-content(space-between);
  @include align-items(flex-start);
}

.alend {
  @include flexbox;
  @include justify-content(space-between);
  @include align-items(flex-end);
}

.bg_cover {
  background-size: cover;
  background-position: 50% 50%;
  background-repeat: no-repeat;
}

.cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

// 12_column grid
.flex_grid {
  @include flexbox;
  margin: 0 calc(var(--grid-gap) / -2);
  & > * {
    margin: 0 calc(var(--grid-gap) / 2)
  }

  &__rwd {
    @include rwd-min(1081) {
      @include flexbox;
      margin: 0 calc(var(--grid-gap) / -2);
      & > * {
        margin: 0 calc(var(--grid-gap) / 2)
      }
    }
  }

  &__mob {
    @include rwd-min(768) {
      @include flexbox;
      margin: 0 calc(var(--grid-gap) / -2);
      & > * {
        margin: 0 calc(var(--grid-gap) / 2)
      }
    }
  }
}

[class*="flex_grid"] {
  @include flex-wrap(wrap);
  &._nowrap {
    @include flex-wrap(nowrap)
  }
  &._align_center {
    @include align-items(center)
  }
  &._space_between {
    @include justify-content(space-between)
  }

  & > * {
    @include flex(1);
    margin-bottom: calc(var(--grid-gap));

    @for $i from 1 through 12 {
      &._col_#{$i} {
        @include flex(0 0 calc(100% / 12 * #{$i} - var(--grid-gap)))
      }
    }

    @include rwd-range(1499, 1081) {
      @for $i from 1 through 12 {
        &._col_sd_#{$i} {
          @include flex(0 0 calc(100% / 12 * #{$i} - var(--grid-gap)))
        }
      }
    }

    @include rwd-max(1080) {
      @for $i from 1 through 12 {
        &._col_rwd_#{$i} {
          @include flex(0 0 calc(100% / 12 * #{$i} - var(--grid-gap)))
        }
      }
    }

    @include rwd-max(767) {
      @for $i from 1 through 12 {
        &._col_mob_#{$i} {
          @include flex(0 0 calc(100% / 12 * #{$i} - var(--grid-gap)))
        }
      }
    }

    @include rwd-min(1081) {
      @for $i from 1 through 4 {
        &._space_l_#{$i} {
          padding-left: calc(100% / 12 * #{$i})
        }
        &._space_r_#{$i} {
          padding-right: calc(100% / 12 * #{$i})
        }
      }
    }
  }
}

// 12 column spacing
@include rwd-min(1081) {
  @for $i from 1 through 4 {
    .col_space_l_#{$i} {
      padding-left: calc((100% + var(--grid-gap)) / 12 * #{$i})
    }
    .col_space_r_#{$i} {
      padding-right: calc((100% + var(--grid-gap)) / 12 * #{$i})
    }
  }
}

.rwd_show {
  @include rwd-min(1081) {
    display: none !important
  }
}
.rwd_hide {
  @include rwd-max(1080) {
    display: none !important
  }
}
.mob_show {
  @include rwd-min(768) {
    display: none !important
  }
}
.mob_hide {
  @include rwd-max(767) {
    display: none !important
  }
}